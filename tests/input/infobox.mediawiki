{{Infobox programming language
| logo = Python-logo-notext.svg
| logo size = 121px
| paradigm = [[Multi-paradigm programming language|Multi-paradigm]]: [[Object-oriented programming|Object-oriented]],<ref>{{Cite web|title=General Python FAQ – Python 3.9.2 documentation|url=https://docs.python.org/3/faq/general.html#what-is-python|access-date=2021-03-28|website=docs.python.org|archive-date=24 October 2012|archive-url=https://web.archive.org/web/20121024164224/http://docs.python.org/faq/general.html#what-is-python|url-status=live}}</ref> [[Procedural programming|Procedural]] ([[Imperative programming|Imperative]]), [[Functional programming|Functional]], [[Structured programming|Structured]], [[Reflective programming|Reflective]]
| released = {{start date and age|1991|02|20|df=y}}<ref name="alt-sources-history">{{cite web |url=https://www.tuhs.org/Usenet/alt.sources/1991-February/001749.html |title=Python 0.9.1 part 01/21 |publisher=alt.sources archives |access-date=2021-08-11 |archive-date=11 August 2021 |archive-url=https://web.archive.org/web/20210811171015/https://www.tuhs.org/Usenet/alt.sources/1991-February/001749.html |url-status=live}}</ref>
| designer = [[Guido van Rossum]]
| developer = [[Python Software Foundation]]
| latest release version = {{wikidata|property|edit|P548=Q2804309|P348}}
| latest release date = {{start date and age|{{wikidata|qualifier|single|P548=Q2804309|P348|P577}}}}
| latest preview version = {{wikidata|property|edit|reference|P548=Q51930650|P348}}
| latest preview date = {{start date and age|{{wikidata|qualifier|single|P548=Q51930650|P348|P577}}}}
| typing = [[Duck typing|Duck]], [[Dynamic typing|Dynamic]], [[Strong and weak typing|Strong typing]];<ref>{{Cite web|title=Why is Python a dynamic language and also a strongly typed language |url=https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language|access-date=2021-01-27|website=Python Wiki |archive-date=14 March 2021|archive-url=https://web.archive.org/web/20210314173706/https://wiki.python.org/moin/Why%20is%20Python%20a%20dynamic%20language%20and%20also%20a%20strongly%20typed%20language|url-status=live}}</ref> [[Optional typing|Optional type annotations]] (since 3.5, but those hints are ignored, except with unofficial tools)<ref name="type_hint-PEP">{{cite web|url=https://www.python.org/dev/peps/pep-0483/|title=PEP 483 – The Theory of Type Hints|website=Python.org|access-date=14 June 2018|archive-date=14 June 2020|archive-url=https://web.archive.org/web/20200614153558/https://www.python.org/dev/peps/pep-0483/|url-status=live}}</ref>
| implementations = [[CPython]], [[PyPy]], [[Stackless Python]], [[MicroPython]], [[CircuitPython]], [[IronPython]], [[Jython]]
| operating system = [[Windows]], [[macOS]], [[Linux|Linux/UNIX]], [[Android (operating system)|Android]], Unix-like systems, BSD variants<ref>{{Cite web |title=test – Regression tests package for Python – Python 3.7.13 documentation |url=https://docs.python.org/3.7/library/test.html?highlight=android#test.support.is_android |access-date=2022-05-17 |website=docs.python.org |archive-date=17 May 2022 |archive-url=https://web.archive.org/web/20220517151240/https://docs.python.org/3.7/library/test.html?highlight=android#test.support.is_android |url-status=live }}</ref><ref>{{Cite web |title=platform – Access to underlying platform's identifying data – Python 3.10.4 documentation |url=https://docs.python.org/3/library/platform.html?highlight=android |access-date=2022-05-17 |website=docs.python.org |archive-date=17 May 2022 |archive-url=https://web.archive.org/web/20220517150826/https://docs.python.org/3/library/platform.html?highlight=android |url-status=live }}</ref> and a few other platforms<!-- used to support many, only few support latest 3.8+ --><ref>{{Cite web |title=Download Python for Other Platforms |url=https://www.python.org/download/other/ |access-date=2023-08-18 |website=Python.org |language=en}}</ref>
| license = [[Python Software Foundation License]]
| file ext = .py, .pyw, .pyz, <!-- Too much trivia?: (since 3.5), since 3.8 latest supported and Python 3.5.10 Sept. 5, 2020--><ref>{{cite web |url=https://www.python.org/dev/peps/pep-0441/ |last=Holth |first=Moore |date=30 March 2014 |access-date=12 November 2015 |title=PEP 0441 – Improving Python ZIP Application Support |archive-date=26 December 2018 |archive-url=https://web.archive.org/web/20181226141117/https://www.python.org/dev/peps/pep-0441/%20 |url-status=live}}</ref><br />
.pyi, .pyc, .pyd <!-- too much trivia: .pyo (prior to 3.5)<ref>File extension .pyo was removed in Python 3.5. See [https://www.python.org/dev/peps/pep-0488/ PEP 0488] {{Webarchive|url=https://web.archive.org/web/20200601133202/https://www.python.org/dev/peps/pep-0488/ |date=1 June 2020}}</ref> -->
| website = {{URL|https://www.python.org/|python.org}}
| dialects = [[Cython]], [[PyPy#RPython|RPython]], [[Bazel (software)|Starlark]]<ref>{{cite web|title=Starlark Language|url=https://docs.bazel.build/versions/master/skylark/language.html|access-date=25 May 2019|archive-date=15 June 2020|archive-url=https://web.archive.org/web/20200615140534/https://docs.bazel.build/versions/master/skylark/language.html|url-status=live}}</ref>
| influenced_by = [[ABC (programming language)|ABC]],<ref name="faq-created"/> [[Ada (programming language)|Ada]],<ref>{{cite web |url=http://archive.adaic.com/standards/83lrm/html/lrm-11-03.html#11.3 |title=Ada 83 Reference Manual (raise statement) |access-date=7 January 2020 |archive-date=22 October 2019 |archive-url=https://web.archive.org/web/20191022155758/http://archive.adaic.com/standards/83lrm/html/lrm-11-03.html#11.3 |url-status=live}}</ref> [[ALGOL 68]],<ref name="98-interview"/> <br>[[APL (programming language)|APL]],<ref name="python.org">{{cite web|url=https://docs.python.org/3/library/itertools.html|title=itertools – Functions creating iterators for efficient looping – Python 3.7.1 documentation|website=docs.python.org|access-date=22 November 2016|archive-date=14 June 2020|archive-url=https://web.archive.org/web/20200614153629/https://docs.python.org/3/library/itertools.html |quote=This module implements a number of iterator building blocks inspired by constructs from APL, Haskell, and SML. |url-status=live}}</ref> [[C (programming language)|C]],<ref name="AutoNT-1"/> [[C++]],<ref name="classmix"/> [[CLU (programming language)|CLU]],<ref name="effbot-call-by-object"/> [[Dylan (programming language)|Dylan]],<ref name="AutoNT-2"/> <br>[[Haskell]],<ref name="AutoNT-3"/><ref name="python.org"/> [[Icon (programming language)|Icon]],<ref name="AutoNT-4"/> [[Lisp (programming language)|Lisp]],<ref name="AutoNT-6"/> {{nowrap|<br>[[Modula-3]]}},{{r|98-interview}}<ref name="classmix" /> [[Perl]],<ref>{{cite web |title=re – Regular expression operations – Python 3.10.6 documentation |url=https://docs.python.org/3/library/re.html |website=docs.python.org |access-date=2022-09-06 |quote=This module provides regular expression matching operations similar to those found in Perl. |archive-date=18 July 2018 |archive-url=https://web.archive.org/web/20180718132241/https://docs.python.org/3/library/re.html |url-status=live }}</ref> [[Standard ML]]<ref name="python.org"/>
| influenced = [[Apache Groovy]], [[Boo (programming language)|Boo]], [[Cobra (programming language)|Cobra]], [[CoffeeScript]],<ref>{{Cite web|url=https://coffeescript.org/|title=CoffeeScript|website=coffeescript.org|access-date=3 July 2018|archive-date=12 June 2020|archive-url=https://web.archive.org/web/20200612100004/http://coffeescript.org/|url-status=live}}</ref> [[D (programming language)|D]], [[F Sharp (programming language)|F#]], [[Godot (game engine)#GDScript|GDScript]], [[Genie (programming language)|Genie]],<ref>{{cite web
|url=https://wiki.gnome.org/action/show/Projects/Genie
|title=The Genie Programming Language Tutorial
|access-date=28 February 2020
|archive-date=1 June 2020
|archive-url=https://web.archive.org/web/20200601133216/https://wiki.gnome.org/action/show/Projects/Genie
|url-status=live
}}</ref> [[Go (programming language)|Go]], [[JavaScript]],<ref>{{cite web
|title=Perl and Python influences in JavaScript
|date=24 February 2013
|website=www.2ality.com
|url=http://www.2ality.com/2013/02/javascript-influences.html
|access-date=15 May 2015
|archive-date=26 December 2018
|archive-url=https://web.archive.org/web/20181226141121/http://2ality.com/2013/02/javascript-influences.html%0A
|url-status=live
}}</ref><ref>{{cite web
|title=Chapter 3: The Nature of JavaScript; Influences
|last=Rauschmayer
|first=Axel
|website=O'Reilly, Speaking JavaScript
|url=http://speakingjs.com/es5/ch03.html
|access-date=15 May 2015
|archive-date=26 December 2018
|archive-url=https://web.archive.org/web/20181226141123/http://speakingjs.com/es5/ch03.html%0A
|url-status=live
}}</ref> [[Julia (programming language)|Julia]],<ref name=Julia/> [[Mojo (programming language)|Mojo]],<ref name="Mojo">{{Cite web |last=Krill |first=Paul |date=2023-05-04 |title=Mojo language marries Python and MLIR for AI development |url=https://www.infoworld.com/article/3695588/mojo-language-marries-python-and-mlir-for-ai-development.html |access-date=2023-05-05 |website=InfoWorld |language=en |archive-date=5 May 2023 |archive-url=https://web.archive.org/web/20230505064554/https://www.infoworld.com/article/3695588/mojo-language-marries-python-and-mlir-for-ai-development.html |url-status=live }}</ref> [[Nim (programming language)|Nim]], [[Ring (programming language)|Ring]],<ref name="The Ring programming language and other languages">{{cite web |url=http://ring-lang.sourceforge.net/doc1.6/introduction.html#ring-and-other-languages |title=Ring and other languages |author=Ring Team |date=4 December 2017 |work=ring-lang.net |publisher=[[ring-lang]] |access-date=4 December 2017 |archive-date=25 December 2018 |archive-url=https://web.archive.org/web/20181225175312/http://ring-lang.sourceforge.net/doc1.6/introduction.html#ring-and-other-languages |url-status=live}}</ref> [[Ruby (programming language)|Ruby]],<ref name="bini"/> [[Swift (programming language)|Swift]]<ref name="lattner2014">{{Cite web |url=http://nondot.org/sabre/ |title=Chris Lattner's Homepage |last=Lattner |first=Chris |date=3 June 2014 |access-date=3 June 2014 |publisher=Chris Lattner |quote=The Swift language is the product of tireless effort from a team of language experts, documentation gurus, compiler optimization ninjas, and an incredibly important internal dogfooding group who provided feedback to help refine and battle-test ideas. Of course, it also greatly benefited from the experiences hard-won by many other languages in the field, drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, C#, CLU, and far too many others to list. |archive-date=25 December 2018 |archive-url=https://web.archive.org/web/20181225175312/http://nondot.org/sabre/ |url-status=live}}</ref>

<!-- Do not put in as there's also a pure Java implementation (Jython): | programming language = [[C (programming language)|C]] -->
| wikibooks = Python Programming
}}